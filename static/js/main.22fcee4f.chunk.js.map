{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addToSelectedGood","good","setState","removeFromSelectedGood","filter","item","resetState","this","className","length","join","type","onClick","map","classNames","isActive","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuFaC,E,4MA/EbC,MAAe,CACbC,cAAe,I,EAGjBC,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,uBAAyB,SAACF,GACxB,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,YAAKD,EAAMC,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,W,EAInEK,WAAa,WACX,EAAKJ,SAAS,CACZH,cAAe,M,4CAInB,WACE,IAAQA,EAAkBQ,KAAKT,MAAvBC,cACAC,EAA0DO,KAA1DP,kBAAmBG,EAAuCI,KAAvCJ,uBAAwBG,EAAeC,KAAfD,WAEnD,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGT,EAAcU,OAAd,UACOV,EAAcW,KAAK,MAD1B,aAEI,uBAELX,EAAcU,QACd,wBACED,UAAU,mCACVG,KAAK,SACLC,QAASN,EAHX,mBAQDV,EAAgBiB,KAAI,SAAAZ,GAAI,OACvB,sBAEEO,UAAWM,IACT,OACA,CACEC,SAAUhB,EAAciB,SAASf,KALvC,UASE,oBAAIO,UAAU,cAAd,SACGP,IAEH,qBAAKO,UAAU,cAAf,SACE,wBACEA,UAAU,eACVG,KAAK,SACLC,QAAS,WACHb,EAAciB,SAASf,GACzBE,EAAuBF,GAEvBD,EAAkBC,IAPxB,SAWGF,EAAciB,SAASf,GACpB,SACA,YAzBHA,a,GA7CCgB,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22fcee4f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addToSelectedGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeFromSelectedGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods.filter(item => item !== good)],\n    }));\n  };\n\n  resetState = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const { addToSelectedGood, removeFromSelectedGood, resetState } = this;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {selectedGoods.length\n            ? (`${selectedGoods.join(', ')} selected`)\n            : ('No goods selected')}\n        </h1>\n        {!selectedGoods.length || (\n          <button\n            className=\"card__button card__button--reset\"\n            type=\"button\"\n            onClick={resetState}\n          >\n            Clear\n          </button>\n        )}\n        {goodsFromServer.map(good => (\n          <div\n            key={good}\n            className={classNames(\n              'card',\n              {\n                isActive: selectedGoods.includes(good),\n              },\n            )}\n          >\n            <h2 className=\"card__title\">\n              {good}\n            </h2>\n            <div className=\"card-button\">\n              <button\n                className=\"card__button\"\n                type=\"button\"\n                onClick={() => {\n                  if (selectedGoods.includes(good)) {\n                    removeFromSelectedGood(good);\n                  } else {\n                    addToSelectedGood(good);\n                  }\n                }}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}